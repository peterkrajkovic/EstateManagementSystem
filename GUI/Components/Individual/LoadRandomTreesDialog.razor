@using static GUI.Components.Client.Model
@inject ISnackbar Snackbar
<MudDialog>
    <TitleContent>
        @MudDialog.Title
    </TitleContent>
    <DialogContent>
       
        <MudTextField  Label="Number of Parcels" T="int?" @bind-Value="Data.ParcelCount">
        </MudTextField>
        <MudTextField Label="Number of Properties" T="int?" @bind-Value="Data.PropertyCount">
        </MudTextField>
        <MudTextField Min="0" Max="100" Label="Coverage %" T="double?" @bind-Value="Data.Coverage">
        </MudTextField>

      
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    private LoadRandomTreesDialogData Data { get; set; } = new();

    private void Submit()
    {
    if (Data.Coverage != null && Data.ParcelCount != null && Data.PropertyCount != null)
        MudDialog.Close(DialogResult.Ok(Data));
    else
        Snackbar.Add("All fields must be assigned.", Severity.Error);
    }

    private void Cancel() => MudDialog.Cancel();

    public class LoadRandomTreesDialogData
    {
    public int? ParcelCount { get; set; }
    public int? PropertyCount { get; set; }
    public double? Coverage { get; set; }
    }
}
